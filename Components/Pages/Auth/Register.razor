@page "/account/registrieren"
@using Korrekturmanagementsystem.Dtos
@using Korrekturmanagementsystem.Services.Interfaces
@inject NavigationManager Navigation
@inject IPasswordService passwordService
@inject IUserService userService
@inject IRoleService roleService
@rendermode InteractiveServer

<div class="modal modal-sheet position-static d-block p-4 py-md-5" tabindex="-1" role="dialog" id="modalRegister">
    <div class="modal-dialog">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header p-5 pb-4 border-bottom-0">
                <h1 class="fw-bold mb-0 fs-2">Jetzt registrieren</h1>
            </div>
            <div class="modal-body p-5 pt-0">
                <form method="post" action="/account/register" @onclick="RegisterUser">
                    <div class="form-floating mb-3">
                        <input @bind="Model.Username" type="text" class="form-control rounded-3" id="floatingUsername">
                        <label for="floatingUsername">Benutzername</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input @bind="Model.Email" type="text" class="form-control rounded-3" id="floatingEmail">
                        <label for="floatingEmail">Email</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input @bind="Model.Password" type="password" class="form-control rounded-3" id="floatingPassword">
                        <label for="floatingPassword">Passwort</label>
                    </div>
                    <div class="form-floating mb-3">
                        @if (roles is not null && roles.Any())
                        {
                            <select @bind="SelectedRoleString" class="form-select rounded-3">
                                <option value="">Bitte Rolle wählen...</option>
                                @foreach (var role in roles)
                                {
                                    <option value="@role.Id">@role.Name</option>
                                }
                            </select>
                        }
                    </div>
                    <button class="w-100 mb-2 btn btn-lg rounded-3 btn-dark" @onclick="RegisterUser" type="submit">Registrieren</button>
                </form>
            </div>
        </div>
    </div>
</div>


@code {
    public CreateUserDto Model = new();
    private string message = "";

    private IEnumerable<RoleDto>? roles = default!;
    private Guid selectedRole = Guid.Empty;

    protected override async Task OnInitializedAsync()
    {
        roles = await roleService.GetStakeholderRolesAsync();
    }

    private string SelectedRoleString
    {
        get => selectedRole == Guid.Empty ? "" : selectedRole.ToString();
        set => selectedRole = string.IsNullOrEmpty(value) ? Guid.Empty : Guid.Parse(value);
    }

    private async Task RegisterUser()
    {
        if (selectedRole == Guid.Empty)
        {
            message = "Bitte eine Rolle wählen!";
            return;
        }

        var hashedPassword = passwordService.HashPassword(Model.Password);

        await userService.CreateUser(new CreateUserDto
            {
                Username = Model.Username,
                Email = Model.Email,
                Password = hashedPassword,
                StakeholderRoleId = selectedRole
            });

        message = "Registrierung erfolgreich!";
        await Task.Delay(1500);
        Navigation.NavigateTo("account/login");
    }
}

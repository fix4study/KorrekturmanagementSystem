@page "/account/login"
@using Korrekturmanagementsystem.Services.Interfaces
@using Korrekturmanagementsystem.Dtos
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Authorization

@rendermode InteractiveServer
@attribute [AllowAnonymous]

<div class="modal modal-sheet position-static d-block p-4 py-md-5" tabindex="-1" role="dialog" id="modalSignin">
    <div class="modal-dialog">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header p-5 pb-4 border-bottom-0">
                <h1 class="fw-bold mb-0 fs-2">Mit Konto anmelden</h1>
            </div>
            <div class="modal-body p-5 pt-0">
                <form method="post" action="/account/login">
                    <div class="form-floating mb-3">
                        <input name="username" type="text" class="form-control rounded-3" id="floatingInput">
                        <label for="floatingInput">Benutzername</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input name="password" type="password" class="form-control rounded-3" id="floatingPassword">
                        <label for="floatingPassword">Passwort</label>
                    </div>
                    <button class="w-100 mb-2 btn btn-lg rounded-3 btn-dark" type="submit">Anmelden</button>
                </form>

                @if (_showError)
                {
                    <div class="alert alert-danger mt-3" role="alert">
                        Benutzername oder Passwort ist ungültig.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private bool _showError;

    [Inject] 
    private NavigationManager NavigationManager { get; set; } = default!;


    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        _showError = query.TryGetValue("error", out var value) && value == "true";
    }

}



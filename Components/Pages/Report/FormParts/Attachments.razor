@using Korrekturmanagementsystem.Dtos
@using Korrekturmanagementsystem.Models
@using Korrekturmanagementsystem.Services.Interfaces
@inject IFileUploadService FileUploadService

<div class="card mb-3 shadow-sm">
    <div class="card-header fw-semibold">Anhänge</div>
    <div class="card-body">
        @if (AttachmentList?.Any() == true)
        {
            <div class="row g-2">
                @foreach (var attachment in AttachmentList)
                {
                    <div class="col-6 col-sm-4 col-lg-3">
                        <div class="border rounded p-2 text-center">
                            @if (attachment.FileName.EndsWith(".png") || attachment.FileName.EndsWith(".jpg"))
                            {
                                <img class="img-fluid rounded mb-1"
                                     src="@FileUploadService.GenerateReadSasUrl(attachment.FileName, TimeSpan.FromHours(1))"
                                     style="max-height: 120px; object-fit: cover; cursor:pointer;"
                                     @onclick="() => ShowModal(attachment)"
                                     @onload="@(() => OnImageLoaded.InvokeAsync(attachment.FileName))" />
                            }
                            else
                            {
                                <a href="@FileUploadService.GenerateReadSasUrl(attachment.FileName, TimeSpan.FromHours(1))"
                                   target="_blank" class="text-decoration-none">
                                    @attachment.FileName
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted">Keine Anhänge vorhanden.</p>
        }
    </div>
</div>

@if (modalAttachment != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background:rgba(0,0,0,0.5);" @onclick="CloseModal">
        <div class="modal-dialog modal-xl modal-dialog-centered" @onclick:stopPropagation>
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@modalAttachment.FileName</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Schließen"></button>
                </div>
                <div class="modal-body text-center">
                    <img src="@FileUploadService.GenerateReadSasUrl(modalAttachment.FileName, TimeSpan.FromHours(1))"
                         class="img-fluid w-100 rounded" />
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public List<AttachmentDto> AttachmentList { get; set; } = default!;
    [Parameter] public EventCallback<string> OnImageLoaded { get; set; }

    private AttachmentDto? modalAttachment;

    private void ShowModal(AttachmentDto attachment)
    {
        modalAttachment = attachment;
    }

    private void CloseModal()
    {
        modalAttachment = null;
    }
}

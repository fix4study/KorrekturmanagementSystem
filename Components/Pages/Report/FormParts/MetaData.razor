@using Korrekturmanagementsystem.Dtos
@using Korrekturmanagementsystem.Models
<div class="card mb-3 shadow-sm">
    <div class="card-header fw-semibold">Metadaten</div>
    <div class="card-body">
        @if (IsEdit)
        {
            <div class="mb-3">
                <label class="form-label">Erstellt von</label>
                <p class="form-control-plaintext">@Model.CreatedByUsername</p>
            </div>

            <AuthorizeView Roles="Admin, Intern">
                <Authorized Context="authContext">
                    <div class="card mb-3 border-info">
                        <div class="card-header bg-info bg-opacity-10 fw-semibold">
                            Status
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label">Status</label>
                                <InputSelect class="form-select" @bind-Value="Model.Report.StatusId">
                                    <option value="">-- Kein Status --</option>
                                    @foreach (var status in Model.Options.Statuses)
                                    {
                                        <option value="@status.Id">@status.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Kommentar (optional)</label>
                                <InputTextArea class="form-control" rows="4" @bind-Value="Model.StatusNote" />
                            </div>
                        </div>
                    </div>
                </Authorized>
                <NotAuthorized Context="notAuthContext">
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <p class="form-control-plaintext">
                            @(Model.Options.Statuses.FirstOrDefault(s => s.Id == Model.Report.StatusId)?.Name ?? "–")
                        </p>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        }

        <div class="mb-3">
            <label class="form-label">Priorität *</label>
            <InputSelect class="form-select" @bind-Value="Model.Report.PriorityId" disabled="@(!HasEditPermission)">
                <option value="">-- Bitte wählen --</option>
                @foreach (var priority in Model.Options.Priorities)
                {
                    <option value="@priority.Id">@priority.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="() => Model.Report.ReportTypeId" />

        </div>

        <!-- Tags Auswahl -->
        <div class="mb-3">
            <label class="form-label">Tags</label>
            <TagSelector AvailableTags="Model.Options.Tags"
                         SelectedTags="Model.SelectedTags"
                         HasEditPermission="HasEditPermission"
                         SelectedTagsChanged="SelectedTagsChanged" />
        </div>

    </div>
</div>

@code {
    [Parameter] public ReportModel Model { get; set; } = default!;
    [Parameter] public bool IsEdit { get; set; }
    [Parameter] public bool HasEditPermission { get; set; }
    [Parameter] public EventCallback<List<TagDto>> SelectedTagsChanged { get; set; }
}

@page "/Meldungen"
@using Korrekturmanagementsystem.Dtos
@using Korrekturmanagementsystem.Dtos.Report
@using Korrekturmanagementsystem.Services.Interfaces
@inject IReportProvider ReportService
@rendermode InteractiveServer

<NavLink class="btn btn-success mb-3 float-end" href="/meldungen/neu">
    + Neue Meldung
</NavLink>

<h3 class="mb-4">Meldungen</h3>

<div class="report-list space-y-2">
    @if (AllReports != null && AllReports.Any())
    {
        @foreach (var report in CurrentPageReports)
        {
            <div class="card border shadow-sm mb-2">
                <div class="card-body p-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-1 h6">@report.Title</h5>
                        <em>Erstellt am: @report.CreatedAt.ToShortDateString()</em>
                    </div>
                    <div class="d-flex justify-content-between text-muted small">
                        <div>
                            <strong>Status:</strong> @report.StatusName |
                            <strong>Prio:</strong> @report.PriorityName
                        </div>
                        <em>Aktualisiert am: @report.UpdatedAt.ToShortDateString()</em>
                    </div>
                    <div class="mt-2 text-end">
                        <a class="btn btn-sm btn-primary" href="@($"/meldungen/details/{report.Id}")">Details</a>
                    </div>
                </div>
            </div>
        }

        @if (TotalPages > 1)
        {
            <nav class="mt-3">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                        <button class="page-link" @onclick="@(() => SetPage(CurrentPage - 1))">«</button>
                    </li>

                    @for (int i = 1; i <= TotalPages; i++)
                    {
                        var pageNumber = i;
                        <li class="page-item @(CurrentPage == pageNumber ? "active" : "")">
                            <button class="page-link" @onclick="@(() => SetPage(pageNumber))">@i</button>
                        </li>
                    }

                    <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                        <button class="page-link" @onclick="@(() => SetPage(CurrentPage + 1))">»</button>
                    </li>
                </ul>
            </nav>
        }
    }
    else
    {
        <p>Derzeit gibt es keine Meldungen</p>
    }
</div>

@code {
    private List<ReportOverviewDto> AllReports { get; set; } = new();
    private List<ReportOverviewDto> FilteredReports { get; set; } = new();

    private int CurrentPage = 1;
    private int PageSize = 10;
    private int TotalPages => (int)Math.Ceiling((double)AllReports.Count / PageSize);


    protected override async Task OnInitializedAsync()
    {
        AllReports = (await ReportService.GetReportsOverviewAsync()).ToList();
    }

    private IEnumerable<ReportOverviewDto> CurrentPageReports =>
        AllReports.Skip((CurrentPage - 1) * PageSize).Take(PageSize);
    

    private void SetPage(int page)
    {
        if (page >= 1 && page <= TotalPages)
        {
            CurrentPage = page;
            StateHasChanged();
        }
    }
}

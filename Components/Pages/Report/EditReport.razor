@page "/Meldungen/Details/{Id:guid}"
@using Korrekturmanagementsystem.Components.Shared
@using Korrekturmanagementsystem.Dtos
@using Korrekturmanagementsystem.Dtos.Report
@using Korrekturmanagementsystem.Models
@using Korrekturmanagementsystem.Services.Interfaces
@using System.Text
@inject IReportService ReportService
@rendermode InteractiveServer

@if (_viewModel != null)
{
    <h3 class="mb-4">Meldung bearbeiten</h3>

    <ReportForm Model="@_viewModel.Report"
        Options="@_viewModel.Options"
        CreatedBy="@_viewModel.CreatedByUsername"
        IsEdit="true"
        Attachments="@_viewModel.Attachments"
        ShowAttachments="@_showAttachments"
        OnToggleAttachments="ToggleAttachmentVisibility"
        OnImageLoaded="OnImageLoaded"
        ShowMessage="@_message"
        OnValidSubmit="HandleValidSubmit"
        SelectedTags="@_viewModel.SelectedTags"
        SelectedTagsChanged="HandleSelectedTagsChanged" />

    <FileUploadPanel OnFilesChanged="files => selectedFiles = files.ToList()" />
}

@code {
    private EditReportViewModel _viewModel = new();
    private bool _showAttachments = false;
    private HashSet<string> _loadedImages = new();
    private string _message = "";
    private List<IBrowserFile> selectedFiles = new();
    

    [Parameter]
    public Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _viewModel  = await ReportService.BuildEditReportViewModelAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        var result = await ReportService.UpdateReportAsync(_viewModel.Report, selectedFiles);

        _message = result.Message ?? "Unbekannter Fehler.";
    }

    private void OnImageLoaded(string fileName)
    {
        _loadedImages.Add(fileName);
        StateHasChanged();
    }

    private void ToggleAttachmentVisibility()
    {
        _showAttachments = !_showAttachments;
    }

    private Task HandleSelectedTagsChanged(List<TagDto> tags)
    {
        _viewModel.SelectedTags = tags;
        return Task.CompletedTask;
    }
}

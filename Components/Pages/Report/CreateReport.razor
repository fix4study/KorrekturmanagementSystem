@page "/meldungen/neu"
@using System.Text
@using Korrekturmanagementsystem.Components.Shared
@using Korrekturmanagementsystem.Dtos
@using Korrekturmanagementsystem.Dtos.Report
@using Korrekturmanagementsystem.Services.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@inject IReportService ReportService
@inject IFileUploadService FileUploadService
@inject IAttachmentService AttachmentService
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager Navigation
@rendermode InteractiveServer

@if (OptionsDto != null)
{
    <h3 class="mb-4">Meldung hinzufügen</h3>

    <ReportForm Model="@Model"
                Options="@OptionsDto"
                IsEdit="false"
                ShowMessage="@message"
                OnValidSubmit="HandleValidSubmit" />

    <AuthorizeView Roles="Admin">
        <div class="card border-secondary mb-3 shadow-sm">
            <div class="card-header bg-light fw-semibold">
                <i class="bi bi-upload me-1"></i> Dateien hochladen (nur Admins)
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <InputFile OnChange="HandleFileChange" multiple class="form-control" />
                    <small class="text-muted">Mehrere Dateien können ausgewählt werden.</small>
                </div>

                @if (selectedFiles?.Any() == true)
                {
                    <ul class="list-group list-group-flush">
                        @foreach (var file in selectedFiles)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span>
                                    <i class="bi bi-file-earmark me-2"></i>@file.Name
                                </span>
                                <span class="badge bg-secondary rounded-pill">@($"{file.Size / 1024} KB")</span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted">Noch keine Datei ausgewählt.</p>
                }
            </div>
        </div>
    </AuthorizeView>
}

@code {
    public AddReportDto Model { get; set; } = new();
    public ReportFormOptionsDto OptionsDto { get; set; } = default!;
    private List<IBrowserFile> selectedFiles = new();
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        OptionsDto = await ReportService.GetFormOptionsAsync();
    }

    private async Task HandleValidSubmit()
    {
        if (!httpContextAccessor.HttpContext?.User.Identity?.IsAuthenticated ?? false)
        {
            message = "Sie sind nicht berechtigt, eine Meldung zu erstellen.";
            return;
        }

        var reportId = await ReportService.AddReportAsync(Model);

        if (reportId is null)
        {
            message = "Fehler beim Erstellen der Meldung.";
            return;
        }

        var sb = new StringBuilder("Meldung erfolgreich gespeichert.");

        if (selectedFiles?.Count > 0)
        {
            var result = await FileUploadService.UploadAsync(reportId.Value, selectedFiles);

            if (result.IsSuccess)
            {
                sb.Append(" Dateien erfolgreich hochgeladen.");
            }
            else
            {
                sb.Append(result.ErrorMessage ?? "Unbekannter Fehler.");
            }
        }

        message = sb.ToString();
        await Task.Delay(1500);
        Navigation.NavigateTo("/meldungen");
    }

    private void HandleFileChange(InputFileChangeEventArgs e)
    {
        selectedFiles = e.GetMultipleFiles().ToList();
    }
}
